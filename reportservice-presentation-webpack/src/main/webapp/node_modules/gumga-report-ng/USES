https://www.stimulsoft.com/en/documentation/online/programming-manual/


let options = {
        appearance: {
            defaultUnit: 0,
            interfaceType: 0,
            showAnimation: true,
            showSaveDialog: true,
            showTooltips: true,
            showTooltipsHelp: true,
            fullScreenMode: false,
            _showLocalization: -1,
            allowChangeWindowTitle: true
        },
        toolbar: {
            showPreviewButton: true,
            showSaveButton: true,
            showAboutButton: false,
            showFileMenu: true,
            showFileMenuNew: true,
            showFileMenuOpen: true,
            showFileMenuSave: true,
            showFileMenuSaveAs: true,
            showFileMenuClose: true,
            showFileMenuExit: true,
            showFileMenuReportSetup: true,
            showFileMenuOptions: true,
            showFileMenuInfo: true,
            showFileMenuAbout: true,
            showSetupToolboxButton: true
        },
        bands: {
            showReportTitleBand: true,
            showReportSummaryBand: true,
            showPageHeaderBand: true,
            showPageFooterBand: true,
            showGroupHeaderBand: true,
            showGroupFooterBand: true,
            showHeaderBand: true,
            showFooterBand: true,
            showColumnHeaderBand: true,
            showColumnFooterBand: true,
            showDataBand: true,
            showHierarchicalBand: true,
            showChildBand: true,
            showEmptyBand: true,
            showOverlayBand: true,
            showTable: true
        },
        crossBands: {
            showCrossTab: true,
            showCrossGroupHeaderBand: true,
            showCrossGroupFooterBand: true,
            showCrossHeaderBand: true,
            showCrossFooterBand: true,
            showCrossDataBand: true
        },
        components: {
            showText: true,
            showTextInCells: false,
            showRichText: false,
            showImage: true,
            showBarCode: true,
            showShape: true,
            showPanel: true,
            showClone: false,
            showCheckBox: true,
            showSubReport: true,
            showZipCode: false,
            showChart: true
        },
        dictionary: {
            showAdaptersInNewConnectionForm: true,
            showDictionary: true,
            dataSourcesPermissions: 15,
            dataConnectionsPermissions: 15,
            dataColumnsPermissions: 15,
            dataRelationsPermissions: 15,
            businessObjectsPermissions: 15,
            variablesPermissions: 15,
            resourcesPermissions: 15
        },
        width: "100%",
        height: "940px",
        viewerOptions: {
            appearance: {
                fullScreenMode: false
            },
            toolbar: {
                visible: true,
                backgroundColor: { name: 'Empty', _a: 0, _r: 255, _g: 255, _b: 255 },
                borderColor: { name: 'Empty', _a: 0, _r: 255, _g: 255, _b: 255 },
                fontColor: { name: 'Empty', _a: 0, _r: 255, _g: 255, _b: 255 },
                fontFamily: 'Arial',
                alignment: 3,
                showButtonCaptions: true,
                showPrintButton: true,
                showOpenButton: false,
                showSaveButton: true,
                showSendEmailButton: false,
                showFindButton: true,
                showBookmarksButton: true,
                showParametersButton: true,
                showEditorButton: true,
                showFullScreenButton: true,
                showFirstPageButton: true,
                showPreviousPageButton: true,
                showCurrentPageControl: true,
                showNextPageButton: true,
                showLastPageButton: true,
                showZoomButton: true,
                showViewModeButton: true,
                showDesignButton: false,
                showAboutButton: true,
                printDestination: 0,
                viewMode: 0,
                multiPageWidthCount: 2,
                multiPageHeightCount: 2,
                _zoom: 100,
                menuAnimation: true,
                showMenuMode: 0,
                displayMode: 0
            },
            exports: {
                storeExportSettings: true,
                showExportDialog: true,
                showExportToDocument: true,
                showExportToPdf: true,
                showExportToXps: false,
                showExportToPowerPoint: false,
                showExportToHtml: true,
                showExportToHtml5: true,
                showExportToMht: false,
                showExportToText: false,
                showExportToRtf: false,
                showExportToWord2007: true,
                showExportToOpenDocumentWriter: false,
                showExportToExcel: false,
                showExportToExcelXml: false,
                showExportToExcel2007: true,
                showExportToOpenDocumentCalc: false,
                showExportToCsv: true,
                showExportToDbf: false,
                showExportToXml: false,
                showExportToDif: false,
                showExportToSylk: false,
                showExportToImageBmp: false,
                showExportToImageGif: false,
                showExportToImageJpeg: false,
                showExportToImagePcx: false,
                showExportToImagePng: false,
                showExportToImageTiff: false,
                showExportToImageMetafile: false,
                showExportToImageSvg: false,
                showExportToImageSvgz: false
            },
            email: {
                showEmailDialog: true,
                showExportDialog: true,
                defaultEmailAddress: "",
                defaultEmailSubject: "",
                defaultEmailMessage: ""
            },
            width: "100%",
            height: "",
            viewerId: "",
            requestStylesUrl: "",
            productVersion: "2017.1.11 from 18 agosto 2017",
            actions: { exportReport: 1, emailReport: 2 }
        }
    }





    ViewerController.$inject = [
    '$scope',
    '$window',
    'GenericReportService',
    'entity',
    'variable',
    '$state',
    '$uibModal',
    'filters'];

function ViewerController($scope,
                          $window,
                          GenericReportService,
                          entity,
                          variable,
                          $state,
                          $uibModal,
                          filters) {
	let variableVar,filtersVar;
    if ($scope.$resolve) {
        variableVar = angular.copy($scope.$resolve.variable);
        filtersVar = angular.copy($scope.$resolve.filters);
	    $scope.entity = angular.copy($scope.$resolve.entity);
    } else {
	    $scope.entity = angular.copy(entity.data);
	    variableVar = angular.copy(variable);
	    filtersVar = angular.copy(filters);
    }

    $scope.back = function () {
        $state.go($state.params.backState, {reportType: $scope.entity.reportType})
    };

    $scope.init = function () {
        StiOptions.WebServer.url = GenericReportService.connectionLocal;
        var viewer = new $window.Stimulsoft.Viewer.StiViewer(null, 'StiViewer', false);
        var report = new $window.Stimulsoft.Report.StiReport();
        var jsonReport = $scope.entity.jsonReport;

        if ($scope.entity.id) {
            report.load(jsonReport);
        }
        report.dictionary.variable = variableVar;
	    variableVar.forEach((vars) => {
	        report.dictionary.variables.list.forEach((item) => {
		        if (item.name == vars.name) {
                    item.val = vars.val;
                    item.value = vars.value;
                    item.valueObject = vars.valueObject;
                }
            });
        });
        viewer.report = report;
        viewer.renderHtml('viewer');


        viewer.onBeginProcessData = function (event) {
            var queryBegin = '',
                queryEnd = '',
                index;
            if (!Array.isArray(filtersVar)) {
                var where = '';
                if (!event.queryString.match(/where/i)) {
                    where = ' where 1=1 ';
                }

                if (event.queryString.match(/group by/i)) {
                    index = event.queryString.match(/group by/i).index;
                    queryBegin = event.queryString.substring(0, index - 1);
                    queryEnd = event.queryString.substring(index, event.queryString.length);
                } else if (event.queryString.match(/order by/i)) {
                    index = event.queryString.match(/order by/i).index;
                    queryBegin = event.queryString.substring(0, index - 1);
                    queryEnd = event.queryString.substring(index, event.queryString.length);
                } else {
                    index = event.queryString.length;
                    queryBegin = event.queryString.substring(0, index);
                }

                event.queryString = queryBegin + where + filtersVar + queryEnd;
            }
            if (Array.isArray(filtersVar)) {
                var query = angular.copy(event.queryString);
                var queryMod = '';
	            filtersVar.forEach(function (data) {
                    for (var i = 1; i <= data.count; i++) {
                        if (queryMod) {
                            queryMod = queryMod + ' UNION ALL ' + query + ' WHERE obj.id = ' + data.id;
                        } else {
                            queryMod = query + ' WHERE obj.id = ' + data.id;
                        }
                    }
                });
                event.queryString = queryMod;
            }
        };

	    $scope.close = () => {
		    $scope.$dismiss();
	    };
    };
}
module.exports = ViewerController;